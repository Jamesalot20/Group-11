{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\OneDrive\\\\Documents\\\\GitHub\\\\Group-11\\\\frontend\\\\src\\\\components\\\\Money.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Money = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState(undefined);\n  const [userId, setUserId] = useState('');\n  const userEmail = localStorage.getItem('userEmail');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await api.get(`/users/userByEmail/${userEmail}`);\n        console.log('balance:', response.data.balance);\n        setBalance(response.data.balance);\n        setUserId(response.data._id);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        alert('Error fetching user data. Please try again.');\n      }\n    };\n    fetchUserData();\n  }, [userEmail]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/users/add-money', {\n        userId,\n        amount\n      });\n      alert('Money added successfully!');\n      console.log('new balance:', response.data.balance);\n      setBalance(response.data.balance); // <-- update balance with new value\n      setAmount('');\n    } catch (error) {\n      console.error('Error adding money:', error);\n      alert('Error adding money. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        placeholder: \"Enter amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), balance !== undefined ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Current Balance: $\", balance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading balance...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Money, \"q2cPmGdeGJN575SGRY5ZzzQBWZE=\");\n_c = Money;\nexport default Money;\nvar _c;\n$RefreshReg$(_c, \"Money\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Money","_s","amount","setAmount","balance","setBalance","undefined","userId","setUserId","userEmail","localStorage","getItem","fetchUserData","response","get","console","log","data","_id","error","alert","handleSubmit","e","preventDefault","post","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","min","placeholder","value","onChange","target","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/james/OneDrive/Documents/GitHub/Group-11/frontend/src/components/Money.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nconst Money = () => {\r\n  const [amount, setAmount] = useState('');\r\n  const [balance, setBalance] = useState(undefined);\r\n  const [userId, setUserId] = useState('');\r\n  const userEmail = localStorage.getItem('userEmail');\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await api.get(`/users/userByEmail/${userEmail}`);\r\n        console.log('balance:', response.data.balance);\r\n        setBalance(response.data.balance);\r\n        setUserId(response.data._id);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n        alert('Error fetching user data. Please try again.');\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userEmail]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/users/add-money', { userId, amount });\r\n      alert('Money added successfully!');\r\n      console.log('new balance:', response.data.balance);\r\n      setBalance(response.data.balance); // <-- update balance with new value\r\n      setAmount('');\r\n    } catch (error) {\r\n      console.error('Error adding money:', error);\r\n      alert('Error adding money. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h3>Add Money</h3>\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Money</button>\r\n      </form>\r\n      {balance !== undefined ? (\r\n        <h4>Current Balance: ${balance.toFixed(2)}</h4>\r\n      ) : (\r\n        <h4>Loading balance...</h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Money;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAAC;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMc,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAEnDf,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAE,sBAAqBL,SAAU,EAAC,CAAC;QACjEM,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAACb,OAAO,CAAC;QAC9CC,UAAU,CAACQ,QAAQ,CAACI,IAAI,CAACb,OAAO,CAAC;QACjCI,SAAS,CAACK,QAAQ,CAACI,IAAI,CAACC,GAAG,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF,CAAC;IAEDR,aAAa,EAAE;EACjB,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMhB,GAAG,CAAC2B,IAAI,CAAC,kBAAkB,EAAE;QAAEjB,MAAM;QAAEL;MAAO,CAAC,CAAC;MACvEkB,KAAK,CAAC,2BAA2B,CAAC;MAClCL,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,QAAQ,CAACI,IAAI,CAACb,OAAO,CAAC;MAClDC,UAAU,CAACQ,QAAQ,CAACI,IAAI,CAACb,OAAO,CAAC,CAAC,CAAC;MACnCD,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,KAAK,CAAC,uCAAuC,CAAC;IAChD;EACF,CAAC;EAGD,oBACErB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAM2B,QAAQ,EAAEL,YAAa;MAAAI,QAAA,gBAC3B1B,OAAA;QAAA0B,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClB/B,OAAA;QACEgC,IAAI,EAAC,QAAQ;QACbC,GAAG,EAAC,GAAG;QACPC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEhC,MAAO;QACdiC,QAAQ,EAAGb,CAAC,IAAKnB,SAAS,CAACmB,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C,eACF/B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC,EACN1B,OAAO,KAAKE,SAAS,gBACpBP,OAAA;MAAA0B,QAAA,GAAI,oBAAkB,EAACrB,OAAO,CAACiC,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,gBAE/C/B,OAAA;MAAA0B,QAAA,EAAI;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAC7B,EAAA,CAzDID,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AA2DX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}